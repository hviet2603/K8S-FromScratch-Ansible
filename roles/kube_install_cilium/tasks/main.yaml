# Install cilium CLI
- name: Get Cilium CLI version
  shell: curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt
  register: cilium_cli_version

- name: Determine CLI architecture
  set_fact:
    cli_arch: "{{ 'arm64' if ansible_architecture == 'aarch64' else 'amd64' }}"

- name: Download Cilium CLI tarball
  get_url:
    url: "https://github.com/cilium/cilium-cli/releases/download/{{ cilium_cli_version.stdout }}/cilium-linux-{{ cli_arch }}.tar.gz"
    dest: "/tmp/cilium-linux-{{ cli_arch }}.tar.gz"
  register: cilium_cli_download

- name: Download Cilium CLI checksum
  get_url:
    url: "https://github.com/cilium/cilium-cli/releases/download/{{ cilium_cli_version.stdout }}/cilium-linux-{{ cli_arch }}.tar.gz.sha256sum"
    dest: "/tmp/cilium-linux-{{ cli_arch }}.tar.gz.sha256sum"
  when: cilium_cli_download is succeeded

- name: Verify checksum
  command: 
    cmd: sha256sum --check /tmp/cilium-linux-{{ cli_arch }}.tar.gz.sha256sum
    chdir: /tmp/
  register: sha256_check
  ignore_errors: true  # Handle the case where checksum verification fails

- name: Extract Cilium CLI
  unarchive:
    src: "/tmp/cilium-linux-{{ cli_arch }}.tar.gz"
    dest: "/usr/local/bin"
    remote_src: yes

- name: Clean up downloaded files
  file:
    path: "/tmp/cilium-linux-{{ cli_arch }}.tar.gz"
    state: absent

- name: Clean up checksum file
  file:
    path: "/tmp/cilium-linux-{{ cli_arch }}.tar.gz.sha256sum"
    state: absent

# Install cilium
- name: Install Cilium to k8s cluster
  shell: cilium install --version {{ cilium_version }}
  environment: 
    KUBECONFIG: "{{ kube_config_path }}"

# Wait until CoreDNS pods are ready
- name: Wait until coredns pods are ready
  command:
    cmd: kubectl wait --for=condition=available --timeout=1200s deployment/coredns -n kube-system
  environment: 
    KUBECONFIG: "{{ kube_config_path }}"